(this.webpackJsonpsortingvisualizer=this.webpackJsonpsortingvisualizer||[]).push([[0],{33:function(e,t,a){e.exports=a(59)},42:function(e,t,a){},43:function(e,t,a){},55:function(e,t,a){},56:function(e,t,a){},57:function(e,t,a){},58:function(e,t,a){},59:function(e,t,a){"use strict";a.r(t);a(34),a(35);var n=a(0),r=a.n(n),i=a(17),o=a.n(i),l=a(16),s=a(2),c=a(3),u=a(9),m=a(8),d=a(10),h=(a(42),a(62)),p=a(18),f=a(60),y=a(61),g=a(63),b=a(64),v=a(65),E=(a(43),function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(e){var n;return Object(s.a)(this,a),(n=t.call(this,e)).toggleNavbar=n.toggleNavbar.bind(Object(p.a)(n)),n.state={collapsed:!0},n}return Object(c.a)(a,[{key:"toggleNavbar",value:function(){this.setState({collapsed:!this.state.collapsed})}},{key:"renderItems",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(f.a,null,r.a.createElement(l.c,{tag:l.b,isActive:function(e,t){return["/","/index","/index.html"].includes(t.pathname)},activeClassName:"active-nav-link",className:"nav-link text-dark",to:"/"},r.a.createElement("p",{style:{display:"inline"}},"Home"))),r.a.createElement(f.a,null,r.a.createElement(l.c,{tag:l.b,exact:!0,activeClassName:"active-nav-link",className:"nav-link text-dark",to:"/about"},r.a.createElement("p",{style:{display:"inline"}},"About"))))}},{key:"render",value:function(){return r.a.createElement("header",null,r.a.createElement(y.a,{className:"navbar-expand-sm navbar-toggleable-sm ng-black border-bottom box-shadow mb-3",light:!0},r.a.createElement(h.a,null,r.a.createElement(g.a,{tag:l.b,to:"/"},"Sorting Visualizer"),r.a.createElement(b.a,{onClick:this.toggleNavbar,className:"mr-2"}),r.a.createElement(v.a,{className:"d-sm-inline-flex flex-sm-row-reverse",isOpen:!this.state.collapsed,navbar:!0},r.a.createElement("ul",{className:"navbar-nav flex-grow"},this.renderItems())))))}}]),a}(n.Component));E.displayName=E.name;var S=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement(E,null),r.a.createElement(h.a,null,this.props.children))}}]),a}(n.Component);S.displayName=S.name;var k=a(6),w=(a(55),function(){function e(){Object(s.a)(this,e),this.sound={audioContext:null,gainNode:null,oscillator:null}}return Object(c.a)(e,[{key:"initSoundService",value:function(){this.deleteSoundService(),this.sound.audioContext=new(window.AudioContext||window.webkitAudioContext),this.sound.gainNode=this.sound.audioContext.createGain(),this.sound.gainNode.gain.value=.15,this.sound.gainNode.connect(this.sound.audioContext.destination),this.sound.oscillator=this.sound.audioContext.createOscillator(),this.sound.oscillator.type="sine",this.sound.oscillator.frequency.value=0,this.sound.oscillator.connect(this.sound.gainNode),this.sound.oscillator.start(this.sound.audioContext.currentTime)}},{key:"deleteSoundService",value:function(){null!==this.sound.oscillator&&(this.sound.oscillator.stop(this.sound.audioContext.currentTime),this.sound.oscillator=null,this.sound.gainNode.disconnect(),this.sound.gainNode=null,this.sound.audioContext.close(),this.sound.audioContext=null)}},{key:"setOscillatorFrequency",value:function(e,t){null!==this.sound.oscillator&&(this.sound.oscillator.frequency.value=e/t*570+180)}},{key:"clearOscillatorFrequency",value:function(){null!==this.sound.oscillator&&(this.sound.oscillator.frequency.value=0)}}]),e}()),A=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"randomNumber",value:function(e,t){return Math.floor(Math.random()*(t-e)+e)}}]),e}(),O=function(){function e(){Object(s.a)(this,e),this.sortedArray=[],this.animations=[]}return Object(c.a)(e,[{key:"addAnimationObject",value:function(e){this.animations.push(e)}},{key:"addEmptyAnimation",value:function(e){for(var t=0;t<e;t++){var a=new x;this.animations.push(a)}}},{key:"addCompareAnimation",value:function(e,t){var a=new N(e,t);this.animations.push(a)}},{key:"addSwapAnimation",value:function(e,t){var a=new C(e,t);this.animations.push(a)}},{key:"addReplaceAnimation",value:function(e,t,a){var n=new j(e,t,a);this.animations.push(n)}}],[{key:"isWaitAnimation",value:function(e){return e instanceof x}},{key:"isCompareAnimation",value:function(e){return e instanceof N}},{key:"isSwapAnimation",value:function(e){return e instanceof C}},{key:"isReplaceAnimation",value:function(e){return e instanceof j}}]),e}(),N=function e(t,a){Object(s.a)(this,e),this.i=t,this.j=a},C=function e(t,a){Object(s.a)(this,e),this.i=t,this.j=a},j=function e(t,a,n){Object(s.a)(this,e),this.i=t,this.j=a,this.subArrayToReplace=n},x=function e(){Object(s.a)(this,e)},I=(a(56),function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(e){var n;return Object(s.a)(this,a),(n=t.call(this,e)).loopFunction=function(){var e=n.animState.currentStep,t=n.animState.animations;if(e>=t.length)return null!=n.props&&null!=n.props.onAnimationFinished&&n.props.onAnimationFinished(),n.stop(),void n.paintArray("green");for(;1===n.animState.delay&&!0===n.animState.playing&&(O.isCompareAnimation(t[n.animState.currentStep])||O.isWaitAnimation(t[n.animState.currentStep]));)n.animState.currentStep++,e++;for(;!1===n.animState.playing&&O.isWaitAnimation(t[n.animState.currentStep]);)n.animState.currentStep++,e++;for(;n.animState.toUncolor.length>0;)n.paintArrayIndex("darkgray",n.animState.toUncolor.pop());if(O.isWaitAnimation(t[e]))null!=n.props&&null!=n.props.onWait&&n.props.onWait();else if(O.isCompareAnimation(t[e]))n.paintArrayIndex("red",t[e].i),n.paintArrayIndex("red",t[e].j),null!=n.props&&null!=n.props.onCompare&&n.props.onCompare(),n.animState.toUncolor.push(t[e].i,t[e].j);else if(O.isSwapAnimation(t[e])){var a=t[e].i,r=t[e].j;n.paintArrayIndex("red",a),n.paintArrayIndex("red",r);var i=n.state.array[a];n.state.array[a]=n.state.array[r],n.state.array[r]=i,n.setState({update:!0}),null!=n.props&&null!=n.props.onSwap&&n.props.onSwap(n.state.array[a],n.state.array[r]),n.animState.toUncolor.push(t[e].i,t[e].j)}else if(O.isReplaceAnimation(t[e])){for(var o=t[e].i;o<=t[e].j;o++)n.paintArrayIndex("violet",o),n.animState.toUncolor.push(o),n.state.array[o]=t[e].subArrayToReplace[o-t[e].i];n.paintArrayIndex("red",t[e].i),n.paintArrayIndex("red",t[e].j),null!=n.props&&null!=n.props.onReplace&&n.props.onReplace(n.state.array[t[e].i],n.state.array[t[e].j]),n.setState({update:!0})}null!=n.props&&null!=n.props.onNextStep&&n.props.onNextStep(),n.animState.currentStep++},n.state={array:null!=n.props&&null!=n.props.array?n.props.array:[]},n.animState={loop:null,playing:!1,delay:1,animations:null,currentStep:0,toUncolor:[]},n.bars=[],n}return Object(c.a)(a,[{key:"paintArray",value:function(e){for(var t=0;t<this.state.array.length;t++)this.bars[t].style.backgroundColor=e}},{key:"paintArrayIndex",value:function(e,t){t<this.state.array.length&&t>=0&&(this.bars[t].style.backgroundColor=e)}},{key:"isPlaying",value:function(){return this.animState.playing}},{key:"start",value:function(e,t){0!==this.state.array.length&&(0===this.animState.currentStep?(this.stop(),this.animState.playing=!0,this.animState.delay=t,this.animState.animations=e,this.animState.currentStep=0,this.animState.toUncolor=[],this.paintArray("darkgray"),this.animState.loop=setInterval(this.loopFunction,t)):this.resume(t))}},{key:"resume",value:function(e){0!==this.state.array.length&&(this.animState.playing=!0,this.animState.delay=e,this.animState.loop=setInterval(this.loopFunction,e))}},{key:"pause",value:function(){clearInterval(this.animState.loop),this.animState.playing=!1}},{key:"stop",value:function(){this.animState.playing=!1,clearInterval(this.animState.loop),this.animState.currentStep=0,this.paintArray("darkgray")}},{key:"next",value:function(){this.loopFunction()}},{key:"getCurrentStep",value:function(){return this.animState.currentStep}},{key:"setArray",value:function(e){this.stop(),this.setState({array:e})}},{key:"newRandomArray",value:function(e){for(var t=[],a=0;a<e;a++)t.push(A.randomNumber(1,359));return this.setState({array:t}),t}},{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"vbars-render-zone"},this.state.array.map((function(t,a){return r.a.createElement("div",{key:a,ref:function(t){return e.bars[a]=t},style:{height:t,marginTop:Math.max.apply(Math,Object(k.a)(e.state.array))-t},className:"vertical-bar"})})))}}]),a}(n.Component));I.displayName=I.name;a(57);var R=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(e){var n;return Object(s.a)(this,a),(n=t.call(this,e)).loopFunction=function(){var e=n.animState.currentStep,t=n.animState.animations;if(e>=t.length)return null!=n.props&&null!=n.props.onAnimationFinished&&n.props.onAnimationFinished(),n.stop(),void n.paintArray("darkgray");for(;1===n.animState.delay&&!0===n.animState.playing&&(O.isCompareAnimation(t[n.animState.currentStep])||O.isWaitAnimation(t[n.animState.currentStep]));)n.animState.currentStep++,e++;for(;!1===n.animState.playing&&O.isWaitAnimation(t[n.animState.currentStep]);)n.animState.currentStep++,e++;for(;n.animState.toUncolor.length>0;)n.paintArrayIndex("darkgray",n.animState.toUncolor.pop());if(O.isWaitAnimation(t[e]))null!=n.props&&null!=n.props.onWait&&n.props.onWait();else if(O.isCompareAnimation(t[e]))n.paintArrayIndex("red",t[e].i),n.paintArrayIndex("red",t[e].j),null!=n.props&&null!=n.props.onCompare&&n.props.onCompare(),n.animState.toUncolor.push(t[e].i,t[e].j);else if(O.isSwapAnimation(t[e])){var a=t[e].i,r=t[e].j;n.paintArrayIndex("red",a),n.paintArrayIndex("red",r);var i=n.state.array[a];n.state.array[a]=n.state.array[r],n.state.array[r]=i,n.forceUpdate(),null!=n.props&&null!=n.props.onSwap&&n.props.onSwap(n.state.array[a],n.state.array[r]),n.animState.toUncolor.push(a,r)}else if(O.isReplaceAnimation(t[e])){for(var o=t[e].i,l=t[e].j,s=o;s<=l;s++)n.paintArrayIndex("violet",s),n.animState.toUncolor.push(s),n.state.array[s]=t[e].subArrayToReplace[s-o];n.paintArrayIndex("red",t[e].i),n.paintArrayIndex("red",t[e].j),null!=n.props&&null!=n.props.onReplace&&n.props.onReplace(n.state.array[o],n.state.array[l]),n.forceUpdate()}null!=n.props&&null!=n.props.onNextStep&&n.props.onNextStep(),n.animState.currentStep++},n.state={array:null!=n.props&&null!=n.props.array?n.props.array:[]},n.animState={loop:null,playing:!1,delay:1,animations:null,currentStep:0,toUncolor:[]},n.bars=[],n}return Object(c.a)(a,[{key:"paintArray",value:function(e){for(var t=0;t<this.state.array.length;t++)this.bars[t].children[0].style.backgroundColor=e}},{key:"paintArrayIndex",value:function(e,t){t<this.state.array.length&&t>=0&&(this.bars[t].children[0].style.backgroundColor=e)}},{key:"isPlaying",value:function(){return this.animState.playing}},{key:"start",value:function(e,t){0!==this.state.array.length&&(0===this.animState.currentStep?(this.stop(),this.animState.playing=!0,this.animState.delay=t,this.animState.animations=e,this.animState.currentStep=0,this.animState.loop=setInterval(this.loopFunction,t)):this.resume(t))}},{key:"resume",value:function(e){0!==this.state.array.length&&(this.animState.playing=!0,this.animState.delay=e,this.animState.loop=setInterval(this.loopFunction,e))}},{key:"pause",value:function(){clearInterval(this.animState.loop),this.animState.playing=!1}},{key:"stop",value:function(){this.animState.playing=!1,clearInterval(this.animState.loop),this.animState.currentStep=0}},{key:"next",value:function(){this.loopFunction()}},{key:"getCurrentStep",value:function(){return this.animState.currentStep}},{key:"setArray",value:function(e){this.stop(),this.setState({array:e})}},{key:"newRandomArray",value:function(e){for(var t=[],a=0;a<e;a++)t.push(A.randomNumber(0,359));return this.setState({array:t}),t}},{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"colors-render-zone"},this.state.array.map((function(t,a){return r.a.createElement("div",{key:a,ref:function(t){return e.bars[a]=t},className:"color-bar",style:{height:"359px",backgroundColor:"hsl("+t+", 82%, 56%)"}},r.a.createElement("div",{className:"color-bar-indicator",style:{marginTop:"349px",height:"10px",backgroundColor:"darkgrey"}}))})))}}]),a}(n.Component);R.displayName=R.name;var W=a(15),q=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"sort",value:function(e,t){this.getDescription();for(var a=t?e:Object(k.a)(e),n=new O,r=!1,i=0;i<a.length&&!r;i++){r=!0;for(var o=0;o<a.length-i-1;o++)if(n.addCompareAnimation(o,o+1),a[o]>a[o+1]){r=!1;var l=a[o];a[o]=a[o+1],a[o+1]=l,n.addSwapAnimation(o,o+1)}}return n.sortedArray=a,n}},{key:"getDescription",value:function(){return r.a.createElement("div",null,r.a.createElement("em",null,r.a.createElement("b",null,"Bubble sort")),", sometimes referred to as ",r.a.createElement("b",null,"sinking sort"),', is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order. The pass through the list is repeated until the list is sorted. The algorithm, which is a comparison sort, is named for the way smaller or larger elements "bubble" to the top of the list.',r.a.createElement("br",null),r.a.createElement("br",null),"This simple algorithm performs ",r.a.createElement("b",null,"poorly")," in real world use and is used primarily as an educational tool. More efficient algorithms such as timsort, or merge sort are used by the sorting libraries built into popular programming languages such as Python and Java.",r.a.createElement("br",null),r.a.createElement("br",null),"More info on ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Bubble_sort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null))}},{key:"getComplexity",value:function(){return"O(n^2)"}}]),e}();q.displayName="Bubble sort";var F=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"sort",value:function(e,t){for(var a=t?e:Object(k.a)(e),n=new O,r=1;r<a.length;r++){var i=a[r];n.addCompareAnimation(r,r);for(var o=r-1;o>=0&&i<a[o];)a[o+1]=a[o],n.addSwapAnimation(o,o+1),o--;a[o+1]=i}return n.sortedArray=a,n}},{key:"getDescription",value:function(){return r.a.createElement("div",null,r.a.createElement("b",null,"Insertion sort")," is a simple sorting algorithm that builds the final sorted array (or list) one item at a time. It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort. ",r.a.createElement("br",null),r.a.createElement("br",null),"However, insertion sort provides several advantages:",r.a.createElement("ul",null,r.a.createElement("li",null,"Simple implementation: Jon Bentley shows a three-line C version, and a five-line optimized version"),r.a.createElement("li",null,"Efficient for (quite) small data sets, much like other quadratic sorting algorithms"),r.a.createElement("li",null,"More efficient in practice than most other simple quadratic (i.e., O(n2)) algorithms such as selection sort or bubble sort"),r.a.createElement("li",null,"Adaptive, i.e., efficient for data sets that are already substantially sorted: the time complexity is O(kn) when each element in the input is no more than k places away from its sorted position"),r.a.createElement("li",null,"Stable; i.e., does not change the relative order of elements with equal keys"),r.a.createElement("li",null,"In-place; i.e., only requires a constant amount O(1) of additional memory space"),r.a.createElement("li",null,"Online; i.e., can sort a list as it receives it")),r.a.createElement("br",null),"When people manually sort cards in a bridge hand, most use a method that is similar to insertion sort.",r.a.createElement("br",null),r.a.createElement("br",null),"More info on ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Insertion_sort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null))}},{key:"getComplexity",value:function(){return"O(n^2)"}}]),e}();F.displayName="Insertion sort";var M=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"sort",value:function(e,t){for(var a=t?e:Object(k.a)(e),n=new O,r=0;r<a.length-1;r++){for(var i=r,o=r+1;o<a.length;o++)n.addCompareAnimation(i,o),a[o]<a[i]&&(i=o);var l=a[i];a[i]=a[r],a[r]=l,n.addSwapAnimation(i,r)}return n.sortedArray=a,n}},{key:"getDescription",value:function(){return r.a.createElement("div",null,"In computer science, ",r.a.createElement("b",null,"selection sort")," is an in-place comparison sorting algorithm. It has an ",r.a.createElement("b",null,"O(n2)")," time complexity, which makes it inefficient on large lists, and generally performs worse than the similar insertion sort. ",r.a.createElement("b",null,"Selection sort")," is noted for its simplicity and has performance advantages over more complicated algorithms in certain situations, particularly where auxiliary memory is limited.",r.a.createElement("br",null),r.a.createElement("br",null),"The algorithm divides the input list into two parts: a sorted sublist of items which is built up from left to right at the front (left) of the list and a sublist of the remaining unsorted items that occupy the rest of the list. Initially, the sorted sublist is empty and the unsorted sublist is the entire input list. The algorithm proceeds by finding the smallest (or largest, depending on sorting order) element in the unsorted sublist, exchanging (swapping) it with the leftmost unsorted element (putting it in sorted order), and moving the sublist boundaries one element to the right.",r.a.createElement("br",null),r.a.createElement("br",null),"The time efficiency of selection sort is quadratic, so there are a number of sorting techniques which have better time complexity than selection sort. One thing which distinguishes selection sort from other sorting algorithms is that it makes the minimum possible number of swaps, n \u2212 1 in the worst case.",r.a.createElement("br",null),r.a.createElement("br",null),"More info on ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Selection_sort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null))}},{key:"getComplexity",value:function(){return"O(n^2)"}}]),e}();M.displayName="Selection sort";var z=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"sort",value:function(t,a){var n=a?t:Object(k.a)(t),r=new O;return e.mergeSortRec(n,0,n.length-1,r),r.sortedArray=n,r}},{key:"mergeSortRec",value:function(t,a,n,r){if(a<n){var i=~~((n-a)/2+a);e.mergeSortRec(t,a,i,r),e.mergeSortRec(t,i+1,n,r),e.merge(t,a,i,n,r)}}},{key:"merge",value:function(e,t,a,n,r){var i=t,o=a+1;if(!(e[a]<=e[o]))for(;i<=a&&o<=n;)if(r.addCompareAnimation(i,o),e[i]>e[o]){for(var l=e[o],s=o;s!==i;)e[s]=e[s-1],s--;e[s]=l,r.addReplaceAnimation(i,o,e.slice(i,o+1)),i++,a++,o++}else i++}},{key:"getDescription",value:function(){return r.a.createElement("div",null,"In computer science, ",r.a.createElement("b",null,"merge sort")," (also commonly spelled mergesort) is an efficient, general-purpose, comparison-based sorting algorithm. Most implementations produce a stable sort, which means that the order of equal elements is the same in the input and output. ",r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("b",null,"Merge sort")," is a divide and conquer algorithm that was invented by",r.a.createElement("b",null," John von Neumann")," in ",r.a.createElement("b",null,"1945"),". A detailed description and analysis of bottom-up mergesort appeared in a report by Goldstine and von Neumann as early as 1948",r.a.createElement("br",null),r.a.createElement("br",null),"More info on ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Merge_sort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null))}},{key:"getComplexity",value:function(){return"O(n*log(n))"}}]),e}();z.displayName="Merge sort (Recursive)";var T=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"sort",value:function(t,a){var n=a?t:Object(k.a)(t),r=new O;return e.mergeSortIter(n,r),r.sortedArray=n,r}},{key:"mergeSortIter",value:function(t,a){for(var n=t.length,r=1;r<n;r*=2)for(var i=0;i<n-1;i+=2*r){var o=Math.min(i+r-1,n-1),l=Math.min(i+2*r-1,n-1);e.merge(t,i,o,l,a)}}},{key:"merge",value:function(e,t,a,n,r){var i=t,o=a+1;if(!(e[a]<=e[o]))for(;i<=a&&o<=n;)if(r.addCompareAnimation(i,o),e[i]>e[o]){for(var l=e[o],s=o;s!==i;)e[s]=e[s-1],s--;e[s]=l,r.addReplaceAnimation(i,o,e.slice(i,o+1)),i++,a++,o++}else i++}},{key:"getDescription",value:function(){return r.a.createElement("div",null,"In computer science, ",r.a.createElement("b",null,"merge sort")," (also commonly spelled mergesort) is an efficient, general-purpose, comparison-based sorting algorithm. Most implementations produce a stable sort, which means that the order of equal elements is the same in the input and output. ",r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("b",null,"Merge sort")," is a divide and conquer algorithm that was invented by",r.a.createElement("b",null," John von Neumann")," in ",r.a.createElement("b",null,"1945"),". A detailed description and analysis of bottom-up mergesort appeared in a report by Goldstine and von Neumann as early as 1948",r.a.createElement("br",null),r.a.createElement("br",null),"More info on ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Merge_sort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null))}},{key:"getComplexity",value:function(){return"O(n*log(n))"}}]),e}();T.displayName="Merge sort (Iterative)";var D=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"sort",value:function(e,t){for(var a=t?e:Object(k.a)(e),n=new O,r=0,i=a.length-1,o=!1;!o;){o=!0;for(var l=r;l<i;l++)if(n.addCompareAnimation(l,l+1),a[l]>a[l+1]){o=!1;var s=a[l];a[l]=a[l+1],a[l+1]=s,n.addSwapAnimation(l,l+1)}if(o)break;o=!0;for(var c=--i;c>r;c--)if(n.addCompareAnimation(c,c-1),a[c]<a[c-1]){o=!1;var u=a[c];a[c]=a[c-1],a[c-1]=u,n.addSwapAnimation(c,c-1)}r++}return n.sortedArray=a,n}},{key:"getDescription",value:function(){return r.a.createElement("div",null,r.a.createElement("b",null,"Cocktail shaker sort"),", also known as ",r.a.createElement("b",null,"bidirectional bubble sort, cocktail sort, shaker sort"),"(which can also refer to a variant of ",r.a.createElement("b",null,"selection sort"),"), ",r.a.createElement("b",null,"ripple sort, shuffle sort, or shuttle sort"),", is an extension of ",r.a.createElement("b",null,"bubble sort"),". The algorithm extends bubble sort by operating in two directions. While it improves on bubble sort by more quickly moving items to the beginning of the list, it provides only marginal performance improvements.",r.a.createElement("br",null),r.a.createElement("br",null),"Like most variants of bubble sort, cocktail shaker sort is used primarily as an educational tool. More performant algorithms such as timsort, or merge sort are used by the sorting libraries built into popular programming languages such as Python and Java.",r.a.createElement("br",null),r.a.createElement("br",null),"More info on ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Cocktail_shaker_sort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null))}},{key:"getComplexity",value:function(){return"O(n^2)"}}]),e}();D.displayName="Cocktail sort";var U=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"sort",value:function(t,a){var n=a?t:Object(k.a)(t),r=new O;return e.quickSort(n,0,n.length-1,r),r.sortedArray=n,r}},{key:"quickSort",value:function(t,a,n,r){if(a<n){var i=e.partition(t,a,n,r);e.quickSort(t,a,i-1,r),e.quickSort(t,i,n,r)}}},{key:"partition",value:function(e,t,a,n){for(var r=e[~~((t+a)/2)];t<=a;){for(;e[t]<r;)n.addCompareAnimation(t,a),t++;for(;e[a]>r;)n.addCompareAnimation(t,a),a--;if(t<=a){var i=[e[a],e[t]];e[t]=i[0],e[a]=i[1],n.addSwapAnimation(t,a),t++,a--}}return t}},{key:"getDescription",value:function(){return r.a.createElement("div",null,r.a.createElement("b",null,"Quicksort")," (sometimes called partition-exchange sort) is an efficient sorting algorithm. Developed by British computer scientist ",r.a.createElement("b",null,"Tony Hoare")," in 1959 and published in 1961, it is still a commonly used algorithm for sorting. When implemented well, it can be about two or three times faster than its main competitors, merge sort and heapsort.",r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("b",null,"Quicksort")," is a divide-and-conquer algorithm. It works by selecting a 'pivot' element from the array and partitioning the other elements into two sub-arrays, according to whether they are less than or greater than the pivot. The sub-arrays are then sorted recursively. This can be done in-place, requiring small additional amounts of memory to perform the sorting.",r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("b",null,"Quicksort"),' is a comparison sort, meaning that it can sort items of any type for which a "less-than" relation (formally, a total order) is defined. Efficient implementations of Quicksort are not a stable sort, meaning that the relative order of equal sort items is not preserved.',r.a.createElement("br",null),r.a.createElement("br",null),"Mathematical analysis of quicksort shows that, on average, the algorithm takes ",r.a.createElement("b",null,"O(n log n)"),"comparisons to sort n items. In the worst case, it makes O(n2) comparisons, though this behavior is rare.",r.a.createElement("br",null),r.a.createElement("br",null),"More info on ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Quicksort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null))}},{key:"getComplexity",value:function(){return"O(n*log(n))"}}]),e}();U.displayName="Quick sort";var _=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"sort",value:function(t,a){var n=a?t:Object(k.a)(t),r=new O;return e.heapSort(n,r),r.sortedArray=n,r}},{key:"heapSort",value:function(t,a){for(var n=t.length,r=~~(n/2-1);r>=0;r--)e.filter(t,n,r,a);for(var i=n-1;i>0;i--){var o=[t[i],t[0]];t[0]=o[0],t[i]=o[1],a.addSwapAnimation(0,i),e.filter(t,i,0,a)}}},{key:"filter",value:function(t,a,n,r){var i=a,o=n,l=2*n+2,s=2*n+1;if(r.addCompareAnimation(l,o),l<i&&t[l]>t[o]&&(o=l),r.addCompareAnimation(s,o),s<i&&t[s]>t[o]&&(o=s),o!==n){var c=[t[o],t[n]];t[n]=c[0],t[o]=c[1],r.addSwapAnimation(n,o),e.filter(t,a,o,r)}}},{key:"getDescription",value:function(){return r.a.createElement("div",null,"In computer science, ",r.a.createElement("b",null,"heapsort")," is a comparison-based sorting algorithm. Heapsort can be thought of as an improved selection sort: like selection sort, heapsort divides its input into a sorted and an unsorted region, and it iteratively shrinks the unsorted region by extracting the largest element from it and inserting it into the sorted region. Unlike ",r.a.createElement("b",null,"selection sort"),", heapsort does not waste time with a linear-time scan of the unsorted region; rather, heap sort maintains the unsorted region in a heap data structure to more quickly find the largest element in each step.",r.a.createElement("br",null),r.a.createElement("br",null),"Although somewhat slower in practice on most machines than a well-implemented quicksort, it has the advantage of a more favorable worst-case ",r.a.createElement("b",null,"O(n log n)")," runtime. Heapsort is an in-place algorithm, but it is not a stable sort.",r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("b",null,"Heapsort")," was invented by ",r.a.createElement("b",null,"J. W. J. Williams")," in ",r.a.createElement("b",null,"1964"),". This was also the birth of the heap, presented already by Williams as a useful data structure in its own right. In the same year,",r.a.createElement("b",null,"R. W. Floyd")," published an improved version that could sort an array in-place, continuing his earlier research into the treesort algorithm.",r.a.createElement("br",null),r.a.createElement("br",null),"More info on ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Heapsort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null))}},{key:"getComplexity",value:function(){return"O(n*log(n))"}}]),e}();_.displayName="Heap sort";var P,J=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"sort",value:function(e,t){for(var a=t?e:Object(k.a)(e),n=new O,r=~~(a.length/2);r>0;r=~~(r/2))for(var i=r;i<a.length;i++){n.addCompareAnimation(i,i);for(var o=i-r;o>=0&&a[o]>a[o+r];){var l=[a[o],a[o+r]];a[o+r]=l[0],a[o]=l[1],n.addCompareAnimation(o,o+r),n.addSwapAnimation(o,o+r),o-=r}}return n.sortedArray=a,n}},{key:"sort_d",value:function(e,t){for(var a=t?e:Object(k.a)(e),n=new O,r=~~(a.length/2);r>0;r=~~(r/2))for(var i=r;i<a.length;i++){for(var o=a[i],l=i-r;l>=0&&a[l]>o;)a[l+r]=a[l],l-=r;a[l+r]=o}return n.addReplaceAnimation(0,a.length-1,a),n.sortedArray=a,n}},{key:"getDescription",value:function(){return r.a.createElement("div",null,r.a.createElement("b",null,"Shellsort")," is an optimization of insertion sort that allows the exchange of items that are far apart. Shellsort, also known as Shell sort or Shell's method, is an in-place comparison sort. It can be seen as either a generalization of sorting by exchange (bubble sort) or sorting by insertion (insertion sort). ",r.a.createElement("br",null),r.a.createElement("br",null),"The method starts by sorting pairs of elements far apart from each other, then progressively reducing the gap between elements to be compared. By starting with far apart elements, it can move some out-of-place elements into position faster than a simple nearest neighbor exchange. Donald Shell published the first version of this sort in 1959. The running time of Shellsort is heavily dependent on the gap sequence it uses. For many practical variants, determining their time complexity remains an open problem.",r.a.createElement("br",null),r.a.createElement("br",null),"More info on ",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Shellsort",target:"_blank",rel:"noopener noreferrer"},"Wikipedia"),r.a.createElement("br",null))}},{key:"getComplexity",value:function(){return"O(n*log^2(n)) <-> O(n^2)"}}]),e}();J.displayName="Shell sort";var V=(P={},Object(W.a)(P,q.displayName,q),Object(W.a)(P,D.displayName,D),Object(W.a)(P,_.displayName,_),Object(W.a)(P,F.displayName,F),Object(W.a)(P,T.displayName,T),Object(W.a)(P,z.displayName,z),Object(W.a)(P,U.displayName,U),Object(W.a)(P,M.displayName,M),Object(W.a)(P,J.displayName,J),P),B=function(){function e(){Object(s.a)(this,e)}return Object(c.a)(e,null,[{key:"getAllAlgorithmNames",value:function(){return Object.keys(V)}},{key:"getAlgorithm",value:function(e){return V[e]}}]),e}(),H=[1e3,300,100,40,15,2,1],L=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(e){var n;return Object(s.a)(this,a),(n=t.call(this,e)).onAlgorithmChange=function(e){n.setState({algorithmId:e.target.value})},n.onRendererChange=function(e){null!=n.renderer&&n.stopSortAnimation();var t=parseInt(e.target.value);n.renderer=n.returnRenderer(t),n.setState({rendererId:t})},n.onSpeedChange=function(e){var t=n.renderer.isPlaying(),a=parseInt(e.target.value);n.renderer.pause(),n.setState({playing:!1}),n.setState({delay:H[a-1]},(function(){!0===t&&(n.renderer.resume(n.state.delay),n.setState({playing:!0}))}))},n.onArraySizeChange=function(e){var t=parseInt(e.target.value);n.setState({arraySize:t})},n.onSoundCheckChanged=function(e){n.setState({soundEnabled:!n.state.soundEnabled},(function(){!1===n.state.soundEnabled&&n.sound.clearOscillatorFrequency()}))},n.updateSound=function(e,t){n.state.soundEnabled?n.sound.setOscillatorFrequency((e+t)/2,Math.max.apply(Math,Object(k.a)(n.state.array))):n.sound.clearOscillatorFrequency()},n.state={array:[],algorithmId:U.displayName,rendererId:1,arraySize:100,playing:!1,delay:2,soundEnabled:!0},n.renderer=new I,n.sound=new w,n}return Object(c.a)(a,[{key:"componentDidMount",value:function(){this.onNewArrayClick()}},{key:"componentWillUnmount",value:function(){this.stopSortAnimation()}},{key:"getSortResult",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=B.getAlgorithm(this.state.algorithmId).sort(this.state.array,e);return console.log(t),t}},{key:"startSortAnimation",value:function(){var e=this.getSortResult();"undefined"!==typeof e&&(0!==e.animations.length?(this.renderer.start(e.animations,this.state.delay),this.setState({playing:!0}),this.sound.initSoundService()):this.getSortResult(!0))}},{key:"resumeSortAnimation",value:function(){this.renderer.resume(this.state.delay),this.setState({playing:!0}),this.sound.initSoundService()}},{key:"pauseSortAnimation",value:function(){this.renderer.pause(),this.setState({playing:!1}),this.sound.deleteSoundService()}},{key:"stopSortAnimation",value:function(){this.renderer.stop(),this.setState({playing:!1}),this.sound.deleteSoundService()}},{key:"playNext",value:function(){this.renderer.next()}},{key:"onNewArrayClick",value:function(){if(null!=this.renderer){var e=this.renderer.newRandomArray(this.state.arraySize);this.setState({array:e})}}},{key:"onPlayClick",value:function(){this.renderer.isPlaying()||0!==this.renderer.getCurrentStep()?this.renderer.isPlaying()?this.pauseSortAnimation():this.resumeSortAnimation():this.startSortAnimation()}},{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"home"},r.a.createElement("div",{className:"card"},r.a.createElement("div",{className:"card-header"},r.a.createElement("div",{className:"form-inline"},r.a.createElement("label",{htmlFor:"selectAlgoDropDown"},r.a.createElement("h6",null,"Algorithm")),r.a.createElement("select",{className:"btn btn-sm combo-box",id:"selectAlgoDropDown",onChange:this.onAlgorithmChange,value:this.state.algorithmId},B.getAllAlgorithmNames().map((function(e){return r.a.createElement("option",{key:e,value:e},e)}))))),r.a.createElement("div",{className:"card-header"},r.a.createElement("button",{className:"btn btn-primary btn-sm",onClick:function(){null!=e.renderer&&e.stopSortAnimation(),e.onNewArrayClick()}},"New array"),r.a.createElement("select",{className:"btn btn-sm combo-box",id:"selectAlgoDropDown",onChange:this.onRendererChange,value:this.state.rendererId},r.a.createElement("option",{value:1},"Vertical bars"),r.a.createElement("option",{value:2},"Colors")),r.a.createElement("div",{className:"range-input form-inline div-right"},r.a.createElement("label",{htmlFor:"sizeRangeSlider"},"Array's size: ",this.state.arraySize),r.a.createElement("input",{type:"range",className:"slider",id:"sizeRangeSlider",min:"10",max:"500",value:this.state.arraySize,onChange:this.onArraySizeChange}))),null!=this.renderer?this.renderControls():null),r.a.createElement("div",{className:"card"},r.a.createElement("div",{className:"card-header"},r.a.createElement("h6",null,"View"),r.a.createElement("div",{className:"form-check div-right"},r.a.createElement("input",{type:"checkbox",className:"form-check-input",id:"soundCheck",checked:this.state.soundEnabled,onChange:this.onSoundCheckChanged}),r.a.createElement("label",{className:"form-check-label",htmlFor:"soundCheck"},"Sound"))),r.a.createElement("div",{className:"card-body render-zone"},this.renderView())),r.a.createElement("div",{className:"card"},r.a.createElement("div",{className:"card-header"},r.a.createElement("h6",null,"About ",this.state.algorithmId),r.a.createElement("div",{className:"div-right"},r.a.createElement("b",null,"Time complexity:"),B.getAlgorithm(this.state.algorithmId).getComplexity())),r.a.createElement("div",{className:"card-body render-zone"},B.getAlgorithm(this.state.algorithmId).getDescription())))}},{key:"renderControls",value:function(){var e=this;return r.a.createElement("div",{className:"card-body"},r.a.createElement("button",{onClick:function(){return e.onPlayClick()},className:"btn btn-sm "+(this.state.playing||0!==this.renderer.getCurrentStep()?"btn-warning":"btn-success")},this.state.playing||0!==this.renderer.getCurrentStep()?this.state.playing?" | | Pause":" > Resume":" > Play"),r.a.createElement("button",{onClick:function(){return e.stopSortAnimation()},className:"btn btn-danger btn-sm"},"Stop"),r.a.createElement("button",{onClick:this.state.playing||0===this.renderer.getCurrentStep()?function(){return null}:function(){return e.playNext()},disabled:this.state.playing||0===this.renderer.getCurrentStep(),className:"btn btn-sm btn-warning"}," > Next"),r.a.createElement("div",{className:"range-input form-inline div-right"},r.a.createElement("label",{htmlFor:"speedRangeSlider"},"Speed: ",H.indexOf(this.state.delay)+1,"x"),r.a.createElement("input",{type:"range",className:"slider",id:"speedRangeSlider",min:"1",max:H.length,value:H.indexOf(this.state.delay)+1,onChange:this.onSpeedChange})))}},{key:"renderView",value:function(){var e=this;switch(this.state.rendererId){case 1:return r.a.createElement(I,{ref:function(t){return e.renderer=t},array:this.state.array,onSwap:function(t,a){return e.updateSound(t,a)},onReplace:function(t,a){return e.updateSound(t,a)},onCompare:function(){return e.state.delay===H[0]||e.state.delay===H[1]?e.sound.clearOscillatorFrequency():null},onWait:function(){return e.state.delay===H[0]||e.state.delay===H[1]?e.sound.clearOscillatorFrequency():null},onAnimationFinished:function(){return e.stopSortAnimation()}});case 2:return r.a.createElement(R,{ref:function(t){return e.renderer=t},array:this.state.array,onSwap:function(t,a){return e.updateSound(t,a)},onReplace:function(t,a){return e.updateSound(t,a)},onCompare:function(){return e.state.delay===H[0]||e.state.delay===H[1]?e.sound.clearOscillatorFrequency():null},onWait:function(){return e.state.delay===H[0]||e.state.delay===H[1]?e.sound.clearOscillatorFrequency():null},onAnimationFinished:function(){return e.stopSortAnimation()}});default:return null}}},{key:"returnRenderer",value:function(e){switch(e){case 1:return new I;case 2:return new R;default:return null}}}]),a}(n.Component);L.displayName=L.name;a(58);var Q=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement("div",{className:"about"},r.a.createElement("div",{className:"card"},r.a.createElement("div",{className:"card-header"},r.a.createElement("h6",null,"About")),r.a.createElement("div",{className:"card-body"},r.a.createElement("p",null,"This is a web application used to visualize different sorting algorithm on a random set of data represented by vertical bars."),r.a.createElement("p",null,"I made this project to learn front-end web development with javascript+react and to recap/learn different sorting algorithms."),r.a.createElement("p",null,"It is built with Javascript, React.JS and it's also a ",r.a.createElement("a",{href:"https://developers.google.com/web/progressive-web-apps"},"progressive web application"),"."),r.a.createElement("p",null,"You can access a deployed version at ",r.a.createElement("a",{href:"https://ciucacosmin109.github.io/SortingVisualizer"},"Github pages"),"."))),r.a.createElement("div",{className:"card"},r.a.createElement("div",{className:"card-header"},r.a.createElement("h6",null,"Download a local version")),r.a.createElement("div",{className:"card-body"},r.a.createElement("p",null,"Clone the repository:"),r.a.createElement("code",null,"> git clone https://github.com/ciucacosmin109/SortingVisualizer.git"),r.a.createElement("br",null),r.a.createElement("code",null,"> cd SortingVisualizer"),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("p",null,"Install the dependencies:"),r.a.createElement("code",null,"> npm install"),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("p",null,"Runs the app in the development mode:"),r.a.createElement("code",null,"> npm start"),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("p",null,"The default web browser should open automatically and redirect you to ",r.a.createElement("a",{href:"http://localhost:3000"},"http://localhost:3000")))),r.a.createElement("div",{className:"card"},r.a.createElement("div",{className:"card-header"},r.a.createElement("h6",null,"License")),r.a.createElement("div",{className:"card-body"},r.a.createElement("p",null,r.a.createElement("a",{href:"https://github.com/ciucacosmin109/SortingVisualizer/blob/master/LICENSE"},"GPL v3")))))}}]),a}(n.Component);Q.displayName=Q.name;var G=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement(S,null,r.a.createElement(d.a,{exact:!0,path:"/",component:L}),r.a.createElement(d.a,{exact:!0,path:"/index",component:L}),r.a.createElement(d.a,{exact:!0,path:"/index.html",component:L}),r.a.createElement(d.a,{exact:!0,path:"/about",component:Q}))}}]),a}(n.Component);G.displayName=G.name;var Y=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function $(e,t){navigator.serviceWorker.register(e).then((function(e){e.onupdatefound=function(){var a=e.installing;null!=a&&(a.onstatechange=function(){"installed"===a.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA."),t&&t.onUpdate&&t.onUpdate(e)):(console.log("Content is cached for offline use."),t&&t.onSuccess&&t.onSuccess(e)))})}})).catch((function(e){console.error("Error during service worker registration:",e)}))}var K=document.getElementsByTagName("base")[0].getAttribute("href"),X=document.getElementById("root");o.a.render(r.a.createElement(l.a,{basename:K},r.a.createElement(G,null)),X),function(e){if("serviceWorker"in navigator){if(new URL("/SortingVisualizer",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",(function(){var t="".concat("/SortingVisualizer","/service-worker.js");Y?(!function(e,t){fetch(e,{headers:{"Service-Worker":"script"}}).then((function(a){var n=a.headers.get("content-type");404===a.status||null!=n&&-1===n.indexOf("javascript")?navigator.serviceWorker.ready.then((function(e){e.unregister().then((function(){window.location.reload()}))})):$(e,t)})).catch((function(){console.log("No internet connection found. App is running in offline mode.")}))}(t,e),navigator.serviceWorker.ready.then((function(){console.log("This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA")}))):$(t,e)}))}}()}},[[33,1,2]]]);
//# sourceMappingURL=main.6f434364.chunk.js.map